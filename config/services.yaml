parameters:
  assistant_version: '0.1-alpha'
  fast_llm_model: '%env(FAST_LLM_MODEL)%'
  http_client_user_agent: 'PragmatistAssistant/%assistant_version%'
  http_client_timeout: 30
  openai_api_key: '%env(OPENAI_API_KEY)%'
  openai_organization: '%env(OPENAI_ORGANIZATION)%'
  google_api_key: '%env(GOOGLE_API_KEY)%'
  google_custom_search_engine_id: '%env(GOOGLE_CUSTOM_SEARCH_ENGINE_ID)%'
  filesystem_local_root_path: '%env(FILESYSTEM_LOCAL_ROOT_PATH)%'

services:
  _defaults:
    autowire: true
    autoconfigure: true

  Pragmatist\Assistant\:
    resource: '../src/*'

  application:
    class: \Symfony\Component\Console\Application
    arguments: [ 'Assistant', '%assistant_version%' ]
    calls:
      - add: [ '@Pragmatist\Assistant\Application' ]
      - setDefaultCommand: [ 'run', true ]
    public: true

  #
  # Third party dependencies
  #
  GuzzleHttp\Client:
    class: \GuzzleHttp\Client
    arguments:
      - timeout: '%http_client_timeout%'
        headers:
          User-Agent: '%http_client_user_agent%'

  OpenAI\Contracts\ClientContract:
    factory: ['\OpenAI', 'client']
    arguments: [ '%openai_api_key%', '%openai_organization%' ]

  League\Flysystem\FilesystemAdapter:
    class: \League\Flysystem\Local\LocalFilesystemAdapter
    arguments: [ '%filesystem_local_root_path%' ]

  League\Flysystem\Filesystem: ~

  #
  # Command handling
  #
  Pragmatist\Assistant\Command\CommandBuilder:
    class: \Pragmatist\Assistant\Command\CommandBuilder
    arguments:
      - ['Pragmatist\Assistant\Command\']

  Pragmatist\Assistant\Command\CommandRunner:
    class: \Pragmatist\Assistant\Command\CommandRunner
    arguments:
      - !tagged_iterator assistant.command_handler

  #
  # Individual command handlers
  #
  Pragmatist\Assistant\Command\GoogleHandler:
    class: \Pragmatist\Assistant\Command\GoogleHandler
    arguments:
      - '@GuzzleHttp\Client'
      - '%google_api_key%'
      - '%google_custom_search_engine_id%'
    tags: ['assistant.command_handler']

  Pragmatist\Assistant\Command\WriteToFileHandler:
    tags: ['assistant.command_handler']

  Pragmatist\Assistant\Command\ReadFromFileHandler:
    tags: ['assistant.command_handler']

  Pragmatist\Assistant\Command\BrowseWebpageHandler:
    class: \Pragmatist\Assistant\Command\BrowseWebpageHandler
    arguments:
      - '@Pragmatist\Assistant\Command\BrowseWebpage\TextExtractor'
      - '@Pragmatist\Assistant\Command\BrowseWebpage\TextSplitter'
      - '@GuzzleHttp\Client'
      - '@OpenAI\Contracts\ClientContract'
      - '%fast_llm_model%'
    tags: ['assistant.command_handler']

  Pragmatist\Assistant\Command\DoNothingHandler:
    tags: ['assistant.command_handler']